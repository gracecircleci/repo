version: 2.1
jobs:
  build:
    working_directory: ~/1CircleCI/repo
    docker: 
      - image: circleci/python:3.7-node # the primary container
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: "Install dependencies"
          command: | # use pipenv to install dependencies
            sudo pip install pandas
            sudo pip install pipenv
            sudo pip install unittest-xml-reporting
            pipenv install
      - run:
          name: "test_catalog. example: Home"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            mkdir -p ./gtest_results
            ls ./gtest_results
            python -m xmlrunner test.test_catalog -o gtest_results
      - run:
          name: "test_common_item_details_subtitle_item eg. common item in 1300 subtitle 'Free to Watch' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m xmlrunner test.test_catalog_row_items.CatalogRowItemTest.test_common_item_details_subtitle_item
      - run:
          name: "test_common_item_details_subtitle_item1 eg. common item in 1300 subtitle 'Click to Watch' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog_row_items.CatalogRowItemTest.test_common_item_details_subtitle_item1
      - run:
          name: "test_catalog_row_title. example: Home"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_row_title
      - run:
          name: "test_catalog_rows. eg. [1300, 1301, 9, 1537, 1517, 1142]"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_rows
      - run:
          name: "test_catalog_home_row_title. 1300 example: New Hero - 2019"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_title
      - run:
          name: "test_catalog_home_row_one_title. compare title of 1301 'Trending Now'"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_one_title
      - run:
          name: "test_catalog_home_row_two_title. compare title of 9 'Apps'"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_two_title
      - run:
          name: "test_catalog_home_row_three_title. compare title of 1537 'Free Channels' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_three_title
      - run:
          name: "test_catalog_home_row_four_title. compare title of 1517 'New Movies to Rent' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_four_title
      - run:
          name: "test_catalog_home_row_five_title. compare title of 1142 'Free this Month'"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_five_title
      - run:
          name: "test_catalog_home_row_length. 'New Hero - 2019' row len 5"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_length
      - run:
          name: "test_catalog_home_row_one_length. 1301 'Trending Now' eg. 9"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_one_length
      - run:
          name: "test_catalog_home_row_two_length. 9 Apps row length eg. 45"
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_two_length
      - run:
          name: "test_catalog_home_row_three_length. 1537 'Free Channels' length  "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_three_length
      - run:
          name: "test_catalog_home_row_iids_random_drafting if same length of 1300 from vue and catalog it is pass "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog.CatalogTest.test_catalog_home_row_four_length
      - run:
          name: "test_common_item_details_subtitle_item eg. common item in 1300 subtitle 'Free to Watch' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog_row_items.CatalogRowItemTest.test_common_item_details_subtitle_item
      - run:
          name: "test_common_item_details_subtitle_item1 eg. common item in 1300 subtitle 'Click to Watch' "
          command: |
            cd test_framework
            export PYTHONPATH=$PYTHONPATH:.
            python -m unittest test.test_catalog_row_items.CatalogRowItemTest.test_common_item_details_subtitle_item1
      - store_test_results:
            path: test_framework/gtest_results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test_framework/gtest_results 
          destination: tr1
  triggers:
    - schedule:
       cron: "0 * * * *"
